---
title: "Including group-level effects in brms"
author: "Dr Stefano Coretta"
institute: "University of Edinburgh"
format:
  mono-light-revealjs:
    theme: [default, custom.scss]
    history: false
filters: [tachyonsextra]
execute: 
  echo: true
knitr:
  opts_chunk: 
    fig.align: center
---

```{r}
#| label: setup
#| include: false

library(tidyverse)
library(brms)
library(tidybayes)
theme_set(theme_light())

options(ggplot2.discrete.fill = RColorBrewer::brewer.pal(8, "Dark2"))
options(ggplot2.discrete.colour = RColorBrewer::brewer.pal(8, "Dark2"))

my_seed <- 8293
```

## Coretta 2018

::: box-note

- Data from my PhD dissertation.

  - **Voicing effect**: vowels tend to be longer when followed by voiced consonants and shorter when followed by voiceless consonants.

- Effect of stop voicing on the duration of preceding vowels in Italian and Polish.

- /pVCV/ words in frame sentence.

  - C is one of /t, d, k, É¡/.
  - V is /a, o, u/.

:::

## Read the data

```{r}
#| label: duration
#| message: false

duration <- read_csv("data/coretta2018/token-measures.csv") |> 
  rename(
    c2_voicing = c2_phonation
  ) |> 
  mutate(
    c2_voicing = factor(c2_voicing, levels = c("voiceless", "voiced")),
    vowel = factor(vowel, levels = c("a", "o", "u")),
    c2_place = factor(c2_place, levels = c("coronal", "velar"))
  ) |> 
  drop_na(v1_duration)

contrasts(duration$vowel) <- "contr.sum"
```

## The tibble `duration`

```{r}
#| label: duration-print
duration |> select(speaker, word, vowel, c2_voicing, v1_duration)
```


## Vowel duration by C2 voicing

```{r}
#| label: vdur-plot
#| echo: false

duration |> 
  ggplot(aes(c2_voicing, v1_duration)) +
  geom_violin(width = 0.5) +
  geom_jitter(alpha = 0.1, width = 0.1) +
  stat_summary(geom = "point", fun = median, colour = "orange", size = 3) +
  facet_grid(cols = vars(language))
```

## Vowel duration by C2 voicing and vowel

```{r}
#| label: vdur-plot-2
#| echo: false

duration |> 
  ggplot(aes(c2_voicing, v1_duration)) +
  geom_violin(width = 0.5) +
  geom_jitter(alpha = 0.2, width = 0.1) +
  stat_summary(geom = "point", fun = median, colour = "orange", size = 3) +
  facet_grid(cols = vars(language), rows = vars(vowel))
```

## Bayesian linear model of vowel duration

```{r}
#| label: vdur-1
#| echo: true

vdur_1 <- brm(
  v1_duration ~
    c2_voicing * vowel * language,
  data = duration,
  family = lognormal,
  seed = my_seed,
  cores = 4,
  file = "data/cache/vdur_1"
)
```

## Bayesian linear model of vowel duration: summary

```{r}
#| label: vdur-1-summ
#| echo: true

summary(vdur_1, prob = 0.9)
```

##

<iframe allowfullscreen frameborder="0" height="100%" mozallowfullscreen style="min-width: 500px; min-height: 355px" src="https://app.wooclap.com/events/DTZXHC/questions/66447e05b23c41e34adba140" width="100%"></iframe>

## Conditional predictions of vowel duration

```{r}
#| label: vdur-1-cond

conditional_effects(vdur_1, "vowel:c2_voicing", conditions = make_conditions(vdur_1, "language"))
```

## Posterior probability distributions of coefficients

```{r}
#| label: vdur-1-gdraws

vdur_1_gdraws <- vdur_1 |>
  gather_draws(`b_.*`, regex = TRUE)

vdur_1_gdraws |> 
  filter(.variable != "b_Intercept") |>
  ggplot(aes(.value, .variable, fill = .variable)) +
  geom_vline(xintercept = 0, linetype = "dashed") +
  stat_halfeye(slab_alpha = 0.5) +
  theme(legend.position = "none")
```

## Spread draws

```{r}
#| label: vdur-1-sdraws
#| echo: true

# libary(tidybayes)
vdur_1_sdraws <- vdur_1 |>
  spread_draws(`b_.*`, regex = TRUE)

vdur_1_sdraws
```

## Posterior probability distributions of effect of voicing

```{r}
#| label: vdur-1-sdraws-plot

vdur_1_sdraws |>
  mutate(
    ve_it = b_c2_voicingvoiced,
    ve_pl = b_c2_voicingvoiced + `b_c2_voicingvoiced:languagePolish`
  ) |> 
  select(ve_it, ve_pl) |> 
  pivot_longer(ve_it:ve_pl, names_to = "effect") |> 
  ggplot(aes(exp(value), effect)) +
  geom_vline(xintercept = 1) +
  stat_halfeye()
```

## Vowel duration by speaker

```{r}
#| label: speakers-dur

duration |> 
  ggplot(aes("", v1_duration, colour = language)) +
  geom_jitter(alpha = 0.5, width = 0.1) +
  facet_wrap(vars(speaker), ncol = 6) +
  scale_colour_brewer(type = "qual")
```

## Random effects are not random

::: box-tip

- **Terminology is unhelpful**:

  - Random effect, multilevel (hyper)parameters, group-level effects, varying effects.
  
  - As in opposition to fixed effects, population-level effects.
  
  - Mixed-effects models, random-effects models, random and fixed-effects models, multilevel models, nested models, hierarchical models...

- **Definitions are unhelpful**:

  - At least [five different definitions](https://stefanocoretta.github.io/posts/2021-03-15-on-random-effects/).

:::

. . .

::: box-note

- **Grouping in the observations not covered by the population-level effects.**

  - Related to (in)dependence between observations.

- Common variables that are included in models as group-level effects are participant/speaker, item/word.

  - Note that some variables could be entered as group-level effects in some cases but not others. It depends on the study design.
:::

##

<iframe allowfullscreen frameborder="0" height="100%" mozallowfullscreen style="min-width: 500px; min-height: 355px" src="https://app.wooclap.com/events/DTZXHC/questions/6645d7cd9868d5b13c717487" width="100%"></iframe>

## Group-level intercepts

```{r}
#| label: vdur-2

vdur_2 <- brm(
  v1_duration ~
    c2_voicing * vowel * language +
    (1 | speaker),
  data = duration,
  family = lognormal,
  seed = my_seed,
  cores = 4,
  file = "data/cache/vdur_2"
)
```

##



## Group-level intercepts: summary

```{r}
#| label: vdur-2-summ

summary(vdur_2, prob = 0.9)
```

## Conditional predictions of vowel duration

```{r}
#| label: vdur-2-cond

conditional_effects(vdur_2, "vowel:c2_voicing", conditions = make_conditions(vdur_2, "language"))
```

## Posterior probability distributions of effect of voicing

```{r}
#| label: vdur-2-sdraws
#| echo: false

vdur_2_sdraws <- vdur_2 |>
  spread_draws(`b_.*`, regex = TRUE)
```

```{r}
#| label: vdur-2-sdraws-plot

vdur_2_sdraws |>
  mutate(
    ve_it = b_c2_voicingvoiced,
    ve_pl = b_c2_voicingvoiced + `b_c2_voicingvoiced:languagePolish`
  ) |> 
  select(ve_it, ve_pl) |> 
  pivot_longer(ve_it:ve_pl, names_to = "effect") |> 
  ggplot(aes(exp(value), effect)) +
  geom_vline(xintercept = 1) +
  stat_halfeye()
```

## Group-level differences: `Intercept`

```{r}
#| label: vdur-2-diffs

vdur_2 |> 
  gather_draws(r_speaker[speaker,term]) |> 
  filter(term == "Intercept") |> 
  ggplot(aes(.value, reorder(as.factor(speaker), .value))) +
  geom_vline(xintercept = 0, linetype = "dashed") +
  stat_halfeye() +
  labs(
    x = "Group-level differences of Intercept",
    y = "Speaker"
  )
```

## Voicing effect by speaker

```{r}
#| label: speakers-ve

duration |> 
  ggplot(aes(c2_voicing, v1_duration, colour = language)) +
  geom_jitter(alpha = 0.2, width = 0.1) +
  facet_wrap(vars(speaker), ncol = 6) +
  scale_colour_brewer(type = "qual")
```

##

<iframe allowfullscreen frameborder="0" height="100%" mozallowfullscreen style="min-width: 500px; min-height: 355px" src="https://app.wooclap.com/events/DTZXHC/questions/6645d57246e62b6268956c22" width="100%"></iframe>

## Group-level intercepts and slopes

```{r}
#| label: vdur-3

vdur_3 <- brm(
  v1_duration ~
    c2_voicing * vowel * language +
    (c2_voicing * vowel | speaker),
  data = duration,
  family = lognormal,
  seed = my_seed,
  cores = 4,
  file = "data/cache/vdur_3"
)
```

::: box-tip

Group-level **slopes** must be variables that are **within-grouping**:

- `c2_voicing` and `vowel` are within-speaker so they can and should be included as group-level slopes.

- `language` is between-speaker (each speaker is a speaker of either Italian or Polish).

Whether a variable is within- or between-grouping depends on the study design although some variables are most likely between-grouping (gender, socio-economic status, education...).

:::

## Group-level differences: `Intercept`

```{r}
#| label: vdur-3-diffs-int

vdur_3 |> 
  gather_draws(r_speaker[speaker,term]) |> 
  filter(term == "Intercept") |> 
  ggplot(aes(.value, reorder(as.factor(speaker), .value))) +
  geom_vline(xintercept = 0, linetype = "dashed") +
  stat_halfeye() +
  labs(
    x = "Group-level differences of Intercept",
    y = "Speaker"
  )
```

## Group-level differences: `c2_voicing` 

```{r}
#| label: vdur-3-diffs-voic

vdur_3 |> 
  gather_draws(r_speaker[speaker,term]) |> 
  filter(term == "c2_voicingvoiced") |> 
  ggplot(aes(.value, reorder(as.factor(speaker), .value))) +
  geom_vline(xintercept = 0, linetype = "dashed") +
  stat_halfeye() +
  labs(
    x = "Group-level differences of c2_voicing",
    y = "Speaker"
  )
```

## Conditional predictions of vowel duration

```{r}
#| label: vdur-3-cond

conditional_effects(vdur_3, "vowel:c2_voicing", conditions = make_conditions(vdur_3, "language"))
```

## Posterior probability of voicing effect

```{r}
#| label: vdur-3-sdraws
#| echo: false

vdur_3_sdraws <- vdur_3 |>
  spread_draws(`b_.*`, regex = TRUE)
```

```{r}
#| label: vdur-3-sdraws-plot

vdur_3_sdraws |>
  mutate(
    ve_it = b_c2_voicingvoiced,
    ve_pl = b_c2_voicingvoiced + `b_c2_voicingvoiced:languagePolish`
  ) |> 
  select(ve_it, ve_pl) |> 
  pivot_longer(ve_it:ve_pl, names_to = "effect") |> 
  ggplot(aes(exp(value), effect)) +
  geom_vline(xintercept = 1) +
  stat_halfeye()
```

## Partial pooling and shrinkage

::: box-note

From a statistical point of view, group-level effects have the following characteristics:

- The are estimated through **partial pooling.**

  - All estimates affect each other.

- Partial pooling causes **shrinkage**.

  - The group-level estimates are shrunk towards the population-level effect.

:::

## Shrinkage

```{r}
#| label: shrink
#| echo: false

newdat <- expand_grid(
  speaker = unique(duration$speaker),
  c2_voicing = c("voiceless"),
  vowel = "a"
) |> 
  mutate(
    language = ifelse(str_detect(speaker, "it"), "Italian", "Polish")
  )

vdur_3_epred <- epred_draws(
  vdur_3,
  newdat  
)

vdur_3_epred |> 
  ggplot(aes(.epred, reorder(as.factor(speaker), .epred))) +
  stat_halfeye() +
  stat_summary(
    data = duration |> filter(vowel == "a", c2_voicing == "voiceless"),
    aes(x = v1_duration, y = speaker),
    colour = "blue",
    position = position_nudge(y = -0.25)
  ) +
  geom_vline(xintercept = exp(4.62)) +
  labs(
    x = "Group-level estimates",
    y = "Speaker"
  )
```

##

<iframe allowfullscreen frameborder="0" height="100%" mozallowfullscreen style="min-width: 500px; min-height: 355px" src="https://app.wooclap.com/events/DTZXHC/questions/6645da109868d5b13c73564a" width="100%"></iframe>

## Summary

::: box-note

- Group-level terms allow the model to account for grouping in the data not accounted for by the population-level terms.

- It is important to include group-level terms. Failure to do so will lead to over-confident estimates that won't replicate.

- Both group-level intercept and slopes should be included (including interactions!).

:::
